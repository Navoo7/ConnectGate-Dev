rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Admins can read all admin documents and log out
    match /admins/{adminId} {
      allow read, delete: if request.auth != null && 
                           request.auth.uid == adminId && 
                           request.auth.token.role == 'admin';
      allow create: if request.auth != null;
      allow update: if false; // Deny updates for admins
    }

    // Users can read their own user document
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && 
                                   request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Allow public access to public_contacts collection
    match /public_contacts/{contactId} {
      allow read, write: if true;  // Anyone can read and write contact submissions
    }

    // Groups and their documents are open for read and write
    match /groups/{org}/{city}/{groupId} {
      allow read, write: if true;
    }
    match /groups/{org}/{city}/{groupId}/{document=**} {
      allow read, write: if true;
    }

    // Questions can be read by users with matching groupIds
    match /questions/{org}/{city}/{questionId} {
      allow read: if request.auth != null && 
                   request.auth.uid != null &&
                   resource.data.groupIds != null && 
                   request.auth.uid in resource.data.groupIds;
      allow create, update, delete: if false;
    }

    // Allow read and write access to answers
    match /answers/{org}/{city}/{document=**} {
      allow read, write: if request.auth != null;
    }

    // Allow public read access to webcollection
    match /webcollection/{document=**} {
      allow read: if true;
    }

    // Allow authenticated access to other documents
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // Allow logout operations
    match /logout {
      allow read, write: if request.auth != null;
    }
  }
}
